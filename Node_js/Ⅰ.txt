○ Express

	Node.jsのフレームワーク
	Webアプリケーションを作る機能を提供する
	
○ パッケージ

	Node.jsには便利な機能を簡単に使えるようにまとめたパッケージというものがある
	Expressもパッケージの一つ
	
○ npm 

	パッケージを用意するにはnpm(Node Package Manager)というシステムを使う
	npmにはパッケージを共有・取得するする機能がある
	
○ インストールしたExpressを利用する

	Expressを使うには、インストールしたパッケージの読み込みと、実際に使用するための準備が必要
	const express = require('express');	// expressの読み込み
	const app = express();	// expressを使用するための準備
	
○ listenメソッド

	listenメソッドを用意してapp.jsファイルを実行するとサーバーを起動することができる
	ファイルを実行するには「node ファイル名」

○ ルーティング

	/tipにリクエストが来た時に、トップ画面を表示させることができる
	URLに対応する処理を実行することをルーティングという
	
○ reqとres

	ルーティング処理では、req(リクエストの略)・res(レスポンスの略)の2つの引数を受けとる
	reqとresには、リクエスト・レスポンスに関する情報が入っている

○ トップ画面の見た目を作ろう

	ブラウザに表示する見た目部分にはEJSという形式のファイルを使い、viewsフォルダに配置する
	見た目を作るファイルをビューファイルと呼ぶ
	
○ 見た目を表示する処理

	ルーティングの処理でres.renderと書くことで、指定ｓたビューファイルをブラウザで表示できる
	
○ CSSを適用するには

	Expressでは、CSSや画像などのファイルがどこに置かれているかを指定する必要がある
	publicフォルダはCSSや画像などを置く場所
	publicフォルダの中のcssフォルダの中にcssファイルを置く
	CSSを適用したい場合は、EJSファイルでpublicファイル内のパスを指定する

○ 画像を使う

	CSSと同じように画像もpublicフォルダから読み込むことができる
	画像ファイルをimagesフォルダの中に置く
	
○ EJS(Embedded JavaScript)とは

	HTMLとJavaScriptのコード両方を記述できるNode.jsのパッケージ
	HTMLのコードの中にJavaScriptを埋め込む(=Embedded)ことができる
	EJSはnpmからインストールしすることで使うことができる
	
○ JavaScriptを利用しよう

	JavaScriptのコードを記述するには、<% %>または<%= %>で囲む
	<% %>で囲んだ場合はブラウザに何も表示されないので、変数の定義などに用いる
	変数の値などをブラウザに表示したい場合は<%= %>を用いる
	
○ オブジェクトの配列を画面に表示する

	まずは、リストをまとめて配列を定義する
	次に配列のオブジェクトを一覧画面に表示する
	forEachが画面に表示させないので<% %>で記述する
	
○ トップ画面のURLを変更する

	これまでトップ画面のURLを「/top」としてきましたが、このURLを「/」に変更する
	「/」のURLをルートURLという
	一番初めにアクセスするページはルートURLに設定することが一般的
	